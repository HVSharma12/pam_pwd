# I use the command module because I don't know a better alternative
# to configure authselect
- name: Create custom authselect profile {{ pam_pwd_policy_name }} from existing profile sssd
  command: authselect create-profile {{ pam_pwd_policy_name }} -b sssd

# I use the command module because I don't know a better alternative
# to configure authselect
- name: Select profile {{ pam_pwd_policy_name }}
  command: authselect select custom/{{ pam_pwd_policy_name }}

- name: enable-feature with-faillock
  command: authselect enable-feature with-faillock

- name: apply changes
  command: authselect --force apply-changes

- name: Keep history of the last {{ pam_pwd_history }} passwords used.
  lineinfile:
    path: "{{ item }}"
    insertafter: '^.*pam_pwquality.so.*$'
    line: "password    requisite     pam_pwhistory.so remember={{ pam_pwd_history }} use_authtok"
    state: present
    backup: yes
  with_items:
    - /etc/authselect/custom/{{ pam_pwd_policy_name }}/system-auth
    - /etc/authselect/custom/{{ pam_pwd_policy_name }}/password-auth

- name: RHEL 7 Enforce root for password complexity
  lineinfile:
    path: "{{ item }}"
    regexp: '^password\s{4}requisite\s{5}pam_pwquality.so\stry_first_pass\slocal_users_only\sretry=3\sauthtok_type=$'
    line: 'password    requisite     pam_pwquality.so try_first_pass local_users_only retry=3 authtok_type= {{ pam_pwd_enforce_root }}'
    backup: yes
  with_items:
    - /etc/authselect/custom/{{ pam_pwd_policy_name }}/system-auth
    - /etc/authselect/custom/{{ pam_pwd_policy_name }}/password-auth
  when:
    - pam_pwd_enforce_root is defined
    - pam_pwd_enforce_root|length > 0
